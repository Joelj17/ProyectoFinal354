# -*- coding: utf-8 -*-
"""Proyecto_Final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15gSHjlLnWy4v3wLYWsp2palnGQgEepV_
"""

import tensorflow_datasets as tfds

import tensorflow as tf
from tensorflow.keras.layers import Dense, Flatten, Conv2D
from tensorflow.keras import Model
import PIL
import tensorflow as tf

from tensorflow.keras import datasets, layers, models
import matplotlib.pyplot as plt

img_train = tfds.as_numpy(tfds.load(
    'colorectal_histology',
    split=['train'],
    batch_size=-1,
    
))

lab=img_train[0]['label']
img=img_train[0]['image']

print(img.shape)



model = models.Sequential()
model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3)))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))

model.add(layers.Flatten())
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(8))

model.summary()

img=img/255

model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

history = model.fit(img, lab, epochs=30, 
                    validation_data=(img, lab))

a=model.predict(img)

def mayor(vec):
  for i,j in enumerate(vec):
    if j==max(vec):
      return i

import numpy as np
l=np.array([mayor(a[i]) for i in range(5000)])

print(l)

print(lab)

from sklearn.metrics import confusion_matrix

confusion_matrix(lab, l)



